// Generated by stratus_hls 19.12-s100  (91710.131054)
// Thu Apr 14 13:43:31 2022
// from ../GaussianFilter.cpp

`timescale 1ps / 1ps

      
module GaussianFilter(i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data);

      input i_clk;
      input i_rst;
      input i_rgb_vld;
      input [23:0] i_rgb_data;
      input o_result_busy;
      output i_rgb_busy;
      output o_result_vld;
      output [31:0] o_result_data;
      reg [31:0] o_result_data;
      reg o_result_m_req_m_prev_trig_req;
      reg o_result_m_unacked_req;
      wire GaussianFilter_Xor_1Ux1U_1U_1_1_out1;
      wire GaussianFilter_Or_1Ux1U_1U_4_2_out1;
      reg GaussianFilter_N_Muxb_1_2_0_4_4_out1;
      reg i_rgb_m_unvalidated_req;
      wire GaussianFilter_gen_busy_r_4_22_gnew_req;
      wire GaussianFilter_gen_busy_r_4_22_gdiv;
      wire GaussianFilter_gen_busy_r_4_22_gen_busy_i_rgb_m_data_is_invalid_next;
      reg[2:0] global_state_next;
      /*signed*/wire[27:0] GaussianFilter_Add_28Sx1U_29S_4_19_in2;
      wire GaussianFilter_And_1Ux1U_1U_4_17_out1;
      wire GaussianFilter_And_1Ux1U_1U_4_17_in1;
      wire[7:0] GaussianFilter_Div_10Ux2U_8U_4_12_out1;
      wire[9:0] GaussianFilter_Add_9Ux8U_10U_4_11_out1;
      wire[7:0] GaussianFilter_Add_9Ux8U_10U_4_11_in1;
      wire[7:0] GaussianFilter_Add_8Ux8U_9U_4_10_in1;
      reg[1:0] GaussianFilter_Add_2Ux1U_2U_4_9_in2;
      reg[1:0] GaussianFilter_Add_4Ux2U_4U_4_8_in1;
      wire[3:0] GaussianFilter_Mul_2Ux2U_4U_4_7_out1;
      reg[1:0] GaussianFilter_Mul_2Ux2U_4U_4_7_in2;
      reg[1:0] GaussianFilter_Add_2Ux1U_2U_4_6_in2;
      reg gs_ctrl0;
      wire GaussianFilter_OrReduction_4U_1U_4_15_out1;
      reg s_reg_19;
      /*signed*/wire[31:0] GaussianFilter_Mul_32Sx8U_32S_4_13_out1;
      reg[31:0] s_reg_18;
      wire[1:0] GaussianFilter_Add_2Ux1U_2U_4_9_out1;
      reg[1:0] s_reg_17;
      wire[8:0] GaussianFilter_Add_8Ux8U_9U_4_10_out1;
      wire[3:0] GaussianFilter_Add_4Ux2U_4U_4_8_out1;
      reg[8:0] s_reg_16;
      wire[1:0] GaussianFilter_Add_2Ux1U_2U_4_6_out1;
      reg[1:0] s_reg_15;
      reg[1:0] s_reg_14;
      wire GaussianFilter_And_1Ux1U_1U_4_20_out1;
      wire[2:0] GaussianFilter_gen_busy_r_4_22_out1;
      wire GaussianFilter_Not_1U_1U_1_3_out1;
      reg o_result_m_req_m_trig_req;
      reg i_rgb_m_busy_req_0;
      /*signed*/wire[28:0] GaussianFilter_Add_28Sx1U_29S_4_19_out1;
      wire GaussianFilter_LessThan_2Ux2U_1U_4_18_out1;
      wire GaussianFilter_LessThan_2Ux2U_1U_4_16_out1;
      wire[31:0] GaussianFilter_Add_32Ux32U_32U_4_14_out1;
      reg[2:0] global_state;
      reg stall0;
      wire[3:0] mask_in1;
      wire[31:0] mask_out1;

         GaussianFilter_ROM_9X32_mask mask(
                                        .in1( mask_in1 ),
                                        .out1( mask_out1 ),
                                        .clk( i_clk )
                                      );

         // resource: mux_32bx3i1c
         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_o_result_data
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        o_result_data <= 32'd0000000000;
                     end
                     
                     3'd3:                      begin
                        o_result_data <= GaussianFilter_Add_32Ux32U_32U_4_14_out1;
                     end
                     
                     3'd4:                      begin
                        if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                        end
                        else begin
                           if (GaussianFilter_LessThan_2Ux2U_1U_4_18_out1) begin
                           end
                           else begin
                              o_result_data <= {{ 3 {GaussianFilter_Add_28Sx1U_29S_4_19_out1[28]}}, GaussianFilter_Add_28Sx1U_29S_4_19_out1};
                           end
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd0, 3'd6:                         begin
                           i_rgb_m_busy_req_0 <= 1'd0;
                        end
                        
                        3'd1:                         begin
                           i_rgb_m_busy_req_0 <= 1'd1;
                        end
                        
                        3'd4:                         begin
                           if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                           else begin
                              if (GaussianFilter_LessThan_2Ux2U_1U_4_18_out1) begin
                                 i_rgb_m_busy_req_0 <= 1'd0;
                              end
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd4:                         begin
                           if (!GaussianFilter_LessThan_2Ux2U_1U_4_16_out1 && !GaussianFilter_LessThan_2Ux2U_1U_4_18_out1) begin
                              o_result_m_req_m_trig_req <= GaussianFilter_Not_1U_1U_1_3_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(GaussianFilter_And_1Ux1U_1U_4_20_out1 or GaussianFilter_gen_busy_r_4_22_out1[0] or global_state)
          begin :drive_stall0
            case (global_state) 

               3'd1:                begin
                  stall0 = GaussianFilter_gen_busy_r_4_22_out1[0];
               end
               
               3'd5:                begin
                  stall0 = GaussianFilter_And_1Ux1U_1U_4_20_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_2bx2i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_14
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_14 <= 2'd0;
                     end
                     
                     3'd4:                      begin
                        if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                        end
                        else begin
                           s_reg_14 <= s_reg_15;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_15
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_15 <= GaussianFilter_Add_2Ux1U_2U_4_6_out1;
                     end
                     
                     3'd4:                      begin
                        if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                        end
                        else begin
                           s_reg_15 <= GaussianFilter_Add_2Ux1U_2U_4_6_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_9bx2i0c
         // resource: regr_en_9
         always @(posedge i_clk)
          begin :drive_s_reg_16
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd4, 3'd6:                      begin
                        s_reg_16 <= {5'b00000, GaussianFilter_Add_4Ux2U_4U_4_8_out1};
                     end
                     
                     3'd1:                      begin
                        s_reg_16 <= GaussianFilter_Add_8Ux8U_9U_4_10_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_17
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd4, 3'd6:                      begin
                        s_reg_17 <= GaussianFilter_Add_2Ux1U_2U_4_9_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_32bx2i0c
         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_18
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd1:                      begin
                        s_reg_18 <= {8'b00000000, i_rgb_data};
                     end
                     
                     3'd2:                      begin
                        s_reg_18 <= GaussianFilter_Mul_32Sx8U_32S_4_13_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_19
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  s_reg_19 <= GaussianFilter_OrReduction_4U_1U_4_15_out1;
               end
               
            endcase

         end

         // resource: mux_2bx2i1c
         always @(s_reg_15 or gs_ctrl0)
          begin :drive_GaussianFilter_Add_2Ux1U_2U_4_6_in2
            if (gs_ctrl0) begin
               GaussianFilter_Add_2Ux1U_2U_4_6_in2 = s_reg_15;
            end
            else begin
               GaussianFilter_Add_2Ux1U_2U_4_6_in2 = 2'd0;
            end
         end

         // resource: GaussianFilter_Add_2Ux1U_2U_4  instance: GaussianFilter_Add_2Ux1U_2U_4_6
         assign GaussianFilter_Add_2Ux1U_2U_4_6_out1 = GaussianFilter_Add_2Ux1U_2U_4_6_in2 + 2'd1;

         // resource: mux_2bx2i1c
         always @(s_reg_17 or GaussianFilter_LessThan_2Ux2U_1U_4_16_out1 or gs_ctrl0)
          begin :drive_GaussianFilter_Mul_2Ux2U_4U_4_7_in2
            if (gs_ctrl0) begin
               if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                  GaussianFilter_Mul_2Ux2U_4U_4_7_in2 = s_reg_17;
               end
               else begin
                  GaussianFilter_Mul_2Ux2U_4U_4_7_in2 = 2'd0;
               end
            end
            else begin
               GaussianFilter_Mul_2Ux2U_4U_4_7_in2 = 2'd0;
            end
         end

         // resource: GaussianFilter_Mul_2Ux2U_4U_4  instance: GaussianFilter_Mul_2Ux2U_4U_4_7
         assign GaussianFilter_Mul_2Ux2U_4U_4_7_out1 = {2'b00, GaussianFilter_Mul_2Ux2U_4U_4_7_in2}*4'd03;

         // resource: mux_2bx3i1c
         always @(s_reg_14 or s_reg_15 or GaussianFilter_LessThan_2Ux2U_1U_4_16_out1 or gs_ctrl0)
          begin :drive_GaussianFilter_Add_4Ux2U_4U_4_8_in1
            if (gs_ctrl0) begin
               if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                  GaussianFilter_Add_4Ux2U_4U_4_8_in1 = s_reg_14;
               end
               else begin
                  GaussianFilter_Add_4Ux2U_4U_4_8_in1 = s_reg_15;
               end
            end
            else begin
               GaussianFilter_Add_4Ux2U_4U_4_8_in1 = 2'd0;
            end
         end

         // resource: GaussianFilter_Add_4Ux2U_4U_4  instance: GaussianFilter_Add_4Ux2U_4U_4_8
         assign GaussianFilter_Add_4Ux2U_4U_4_8_out1 = GaussianFilter_Mul_2Ux2U_4U_4_7_out1 + {2'b00, GaussianFilter_Add_4Ux2U_4U_4_8_in1};

         // resource: mux_2bx2i1c
         always @(s_reg_17 or GaussianFilter_LessThan_2Ux2U_1U_4_16_out1 or gs_ctrl0)
          begin :drive_GaussianFilter_Add_2Ux1U_2U_4_9_in2
            if (gs_ctrl0) begin
               if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                  GaussianFilter_Add_2Ux1U_2U_4_9_in2 = s_reg_17;
               end
               else begin
                  GaussianFilter_Add_2Ux1U_2U_4_9_in2 = 2'd0;
               end
            end
            else begin
               GaussianFilter_Add_2Ux1U_2U_4_9_in2 = 2'd0;
            end
         end

         // resource: GaussianFilter_Add_2Ux1U_2U_4  instance: GaussianFilter_Add_2Ux1U_2U_4_9
         assign GaussianFilter_Add_2Ux1U_2U_4_9_out1 = GaussianFilter_Add_2Ux1U_2U_4_9_in2 + 2'd1;

         // instance: drive_GaussianFilter_Add_8Ux8U_9U_4_10_in1
         assign GaussianFilter_Add_8Ux8U_9U_4_10_in1 = i_rgb_data[15:8];

         // resource: GaussianFilter_Add_8Ux8U_9U_4  instance: GaussianFilter_Add_8Ux8U_9U_4_10
         assign GaussianFilter_Add_8Ux8U_9U_4_10_out1 = {1'b0, i_rgb_data[7:0]} + {1'b0, GaussianFilter_Add_8Ux8U_9U_4_10_in1};

         // instance: drive_GaussianFilter_Add_9Ux8U_10U_4_11_in1
         assign GaussianFilter_Add_9Ux8U_10U_4_11_in1 = s_reg_18[23:16];

         // resource: GaussianFilter_Add_9Ux8U_10U_4  instance: GaussianFilter_Add_9Ux8U_10U_4_11
         assign GaussianFilter_Add_9Ux8U_10U_4_11_out1 = {1'b0, s_reg_16} + {2'b00, GaussianFilter_Add_9Ux8U_10U_4_11_in1};

         // instance: drive_mask_in1
         assign mask_in1 = s_reg_16[3:0];

         // resource: GaussianFilter_Div_10Ux2U_8U_4  instance: GaussianFilter_Div_10Ux2U_8U_4_12
         assign GaussianFilter_Div_10Ux2U_8U_4_12_out1 = GaussianFilter_Add_9Ux8U_10U_4_11_out1 / 2'd3;

         // resource: GaussianFilter_Mul_32Sx8U_32S_4  instance: GaussianFilter_Mul_32Sx8U_32S_4_13
         assign GaussianFilter_Mul_32Sx8U_32S_4_13_out1 = mask_out1*{24'b000000000000000000000000, GaussianFilter_Div_10Ux2U_8U_4_12_out1};

         // resource: GaussianFilter_Add_32Ux32U_32U_4  instance: GaussianFilter_Add_32Ux32U_32U_4_14
         assign GaussianFilter_Add_32Ux32U_32U_4_14_out1 = s_reg_18 + o_result_data;

         // resource: GaussianFilter_OrReduction_4U_1U_4  instance: GaussianFilter_OrReduction_4U_1U_4_15
         assign GaussianFilter_OrReduction_4U_1U_4_15_out1 = (|GaussianFilter_Add_32Ux32U_32U_4_14_out1[3:0]);

         // resource: GaussianFilter_LessThan_2Ux2U_1U_4  instance: GaussianFilter_LessThan_2Ux2U_1U_4_16
         assign GaussianFilter_LessThan_2Ux2U_1U_4_16_out1 = s_reg_17 < 2'd3;

         // instance: drive_GaussianFilter_And_1Ux1U_1U_4_17_in1
         assign GaussianFilter_And_1Ux1U_1U_4_17_in1 = o_result_data[31];

         // resource: GaussianFilter_And_1Ux1U_1U_4  instance: GaussianFilter_And_1Ux1U_1U_4_17
         assign GaussianFilter_And_1Ux1U_1U_4_17_out1 = s_reg_19 & GaussianFilter_And_1Ux1U_1U_4_17_in1;

         // resource: GaussianFilter_LessThan_2Ux2U_1U_4  instance: GaussianFilter_LessThan_2Ux2U_1U_4_18
         assign GaussianFilter_LessThan_2Ux2U_1U_4_18_out1 = s_reg_15 < 2'd3;

         // instance: drive_GaussianFilter_Add_28Sx1U_29S_4_19_in2
         assign GaussianFilter_Add_28Sx1U_29S_4_19_in2 = o_result_data[31:4];

         // resource: GaussianFilter_Add_28Sx1U_29S_4  instance: GaussianFilter_Add_28Sx1U_29S_4_19
         assign GaussianFilter_Add_28Sx1U_29S_4_19_out1 = {GaussianFilter_Add_28Sx1U_29S_4_19_in2[27], GaussianFilter_Add_28Sx1U_29S_4_19_in2} + {28'b0000000000000000000000000000, GaussianFilter_And_1Ux1U_1U_4_17_out1};

         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx2i1c
         always @(GaussianFilter_LessThan_2Ux2U_1U_4_16_out1 or GaussianFilter_LessThan_2Ux2U_1U_4_18_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               3'd0, 3'd6:                begin
                  global_state_next = 3'd1;
               end
               
               3'd4:                begin
                  if (GaussianFilter_LessThan_2Ux2U_1U_4_16_out1) begin
                     global_state_next = 3'd1;
                  end
                  else begin
                     if (GaussianFilter_LessThan_2Ux2U_1U_4_18_out1) begin
                        global_state_next = 3'd1;
                     end
                     else begin
                        global_state_next = global_state + 3'd1;
                     end
                  end
               end
               
               default:                begin
                  global_state_next = global_state + 3'd1;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        3'd4:                         begin
                           gs_ctrl0 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_rgb_busy
         assign i_rgb_busy = GaussianFilter_gen_busy_r_4_22_out1[2];

         // resource: GaussianFilter_gen_busy_r_4  instance: GaussianFilter_gen_busy_r_4_22
         assign GaussianFilter_gen_busy_r_4_22_out1 = {GaussianFilter_gen_busy_r_4_22_gnew_req, {GaussianFilter_gen_busy_r_4_22_gdiv, GaussianFilter_gen_busy_r_4_22_gen_busy_i_rgb_m_data_is_invalid_next}};

         // resource: GaussianFilter_gen_busy_r_4  instance: GaussianFilter_gen_busy_r_4_22
         assign GaussianFilter_gen_busy_r_4_22_gen_busy_i_rgb_m_data_is_invalid_next = ~GaussianFilter_gen_busy_r_4_22_gdiv;

         // resource: GaussianFilter_gen_busy_r_4  instance: GaussianFilter_gen_busy_r_4_22
         assign GaussianFilter_gen_busy_r_4_22_gdiv = i_rgb_vld & !GaussianFilter_gen_busy_r_4_22_gnew_req;

         // resource: GaussianFilter_gen_busy_r_4  instance: GaussianFilter_gen_busy_r_4_22
         assign GaussianFilter_gen_busy_r_4_22_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_m_unvalidated_req <= GaussianFilter_N_Muxb_1_2_0_4_4_out1;
            end
         end

         // resource: GaussianFilter_N_Muxb_1_2_0_4
         always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
          begin :GaussianFilter_N_Muxb_1_2_0_4_4
            if (i_rgb_m_busy_req_0) begin
               GaussianFilter_N_Muxb_1_2_0_4_4_out1 = i_rgb_m_unvalidated_req;
            end
            else begin
               GaussianFilter_N_Muxb_1_2_0_4_4_out1 = i_rgb_vld;
            end
         end

         // instance: drive_o_result_vld
         assign o_result_vld = GaussianFilter_Or_1Ux1U_1U_4_2_out1;

         // resource: GaussianFilter_Or_1Ux1U_1U_4  instance: GaussianFilter_Or_1Ux1U_1U_4_2
         assign GaussianFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | GaussianFilter_Xor_1Ux1U_1U_1_1_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_unacked_req
            if (i_rst == 1'b0) begin
               o_result_m_unacked_req <= 1'd0;
            end
            else begin
               o_result_m_unacked_req <= GaussianFilter_And_1Ux1U_1U_4_20_out1;
            end
         end

         // resource: GaussianFilter_And_1Ux1U_1U_4  instance: GaussianFilter_And_1Ux1U_1U_4_20
         assign GaussianFilter_And_1Ux1U_1U_4_20_out1 = o_result_busy & o_result_vld;

         // resource: GaussianFilter_Xor_1Ux1U_1U_1  instance: GaussianFilter_Xor_1Ux1U_1U_1_1
         assign GaussianFilter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
            end
         end

         // resource: GaussianFilter_Not_1U_1U_1  instance: GaussianFilter_Not_1U_1U_1_3
         assign GaussianFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;


endmodule

